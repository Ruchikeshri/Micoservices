server.port=8060
#spring.security.oauth2.client.provider.keycloak.issuerUri=http://localhost:8180/auth/realms/microservices-realm
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservices-realm
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone  = https://localhost:8761/eureka
spring.application.name=ApiGateway
spring.cloud.config.default-filters=TokenRelay
#spring.boot.admin.client.url=http://localhost:8093
#management.endpoint.web.exposure.include=*
#management.endpoint.health.show-details=always
#spring.boot.admin.client.username=admin
#spring.boot.admin.client.password=admin
eureka.instance.hostname=localhost
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
#spring.cloud.gateway.routes[0].uri=http://localhost:9096/user-service/api/v1/
#spring.cloud.gateway.routes[0].uri=lb://user-service/api/v1/
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/api/v1/**

spring.cloud.gateway.routes[1].id=blog-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8086/blog-service/api/v1/
spring.cloud.gateway.routes[1].uri=lb://blog-service/api/v1/
spring.cloud.gateway.routes[1].predicates[0]=Path=/blog-service/api/v1/**